plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.github.davidmc24.gradle.plugin.avro" version '1.6.0'
}

group 'dev.siriuz'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'

ext {
    avroVersion='1.11.1'
    avroSerializerVersion='7.3.2'
}

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

sourceSets {
    mock {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
        }
    }
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation "org.apache.avro:avro:$avroVersion"
    implementation "io.confluent:kafka-avro-serializer:$avroSerializerVersion"
    implementation platform("io.projectreactor:reactor-bom:$reactorBomVersion")
    implementation "io.projectreactor:reactor-core"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    mockImplementation 'org.springframework.boot:spring-boot-starter'
    mockImplementation 'org.springframework.kafka:spring-kafka'
    mockImplementation "org.apache.avro:avro:$avroVersion"
    mockImplementation "io.confluent:kafka-avro-serializer:$avroSerializerVersion"
    mockCompileOnly "org.projectlombok:lombok"
    mockAnnotationProcessor "org.projectlombok:lombok"

}

configurations {
    // to extend dependencies of mock source set from main
    //mockImplementation.extendsFrom(implementation)
    //mockRuntimeOnly.extendsFrom(runtimeOnly)
}

test {
    useJUnitPlatform()
}